// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parking.Data;

namespace Parking.Migrations
{
    [DbContext(typeof(StoreDataContext))]
    [Migration("20201026183311_NewColumn")]
    partial class NewColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("Parking.Models.ParkingDrive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DisplacedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ParkedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("PriceTableID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PriceTableID");

                    b.ToTable("ParkingDrive");
                });

            modelBuilder.Entity("Parking.Models.PriceTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("ExtraHourPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("HourPrice")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("PriceTable");
                });

            modelBuilder.Entity("Parking.Models.ParkingDrive", b =>
                {
                    b.HasOne("Parking.Models.PriceTable", "PriceTable")
                        .WithMany()
                        .HasForeignKey("PriceTableID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
